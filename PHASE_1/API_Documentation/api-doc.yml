openapi: 3.0.0
info:
  title: Thicc Peas API
  version: 1.0.1
  description: ''
servers:
  # Added by API Auto Mocking Plugin
  - url: 'https://thicc-peas-cdc-api-o54gbxra3a-an.a.run.app/'
    description: Thicc Peas API deployed on Cloud Run
  # - url: https://virtserver.swaggerhub.com/l9692/111/1.0.1
  #   description: SwaggerHub API Auto Mocking


tags:
  - name: disease
    description: Information pertaining to diseases on the CDC.
  - name: article
    description: Information pertaining to articles on the CDC. An article can contain multiple reports.
  - name: report
    description: Information regarding outbreaks/reports regarding the CDC. Report sbelong to articles.
  - name: log
    description: The output logs of the API.
    
paths:
  /diseases:
    get:
      summary: Sends all diseases that satisfy the query parameter filters used. By default (when no query parameters are used) all diseases are returned.
      tags:
        - disease
      operationId: get-all-disease
      parameters:
        - in: query
          name: disease_names
          schema:
            type: string
          required: false
          description:  results are filtered for the given terms in the name symptoms of the disease. Should be a comma-separated list. (e.g. "Zika,Anthrax,ecoli").
        - in: query
          name: symptoms
          schema:
            type: string
          required: false
          description:  results are filtered for the given terms in the symptoms of the the disease. Should be a comma-separated list. (e.g. "vomiting,coughing").
      responses:
        '200':
          description: Successfully sent list of all diseases according to query parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Diseases_Results'
        '400':
          description: Invalid query parameters used or badly formatted request.
                
  '/disease/{diseaseID}':
    parameters:
      - in: path
        name: diseaseID
        schema:
          type: string
        required: true
        description: ID of an existing disease.
        example: "922866848e1358b4bdc607e4598d9cc5"
    get:
      summary: Get Disease info by disease id.
      description: Retrieve the information of the disease with the matching disease name.
      tags:
        - disease
      responses:
        '200':
          description: Query completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Disease_Result'

  /reports:
    get:
      summary: Sends all reports that satisfy the query parameter filters used. By default (when no query parameters are used) all reports are returned.
      tags:
        - report
      operationId: get-all-reports
      parameters:
        - in: query
          name: start_date
          schema:
            type: string
          required: false
          description:  ISO date that is the start of the date range to search in. (e.g. "2020-12-01"). Optional.
        - in: query
          name: end_date
          schema:
            type: string
          required: false
          description:  ISO date that is the end of the date range to search in. (e.g. "2021-03-01"). Optional.
        - in: query
          name: location
          schema:
            type: string
          required: false
          description:  Location of the report to look for. (e.g. "USA"). Optional.
        - in: query
          name: key_terms
          schema:
            type: string
          required: false
          description:  Comma-delimited list of key terms to search for. (e.g. "hedgehog"). Optional.
      responses:
        '200':
          description: Successfully sent list of all reports according to query parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report_Results'
        '400':
          description: Invalid query parameters used or badly formatted request.
          
  '/report/{reportID}':
    parameters:
      - in: path
        name: reportID
        schema:
          type: string
        required: true
        description: ID of an existing report.
        example: "43953358269057c599f87450db9017df"
    get:
      summary: Get report info by report id.
      description: Retrieve the information of the disease with the matching disease name.
      tags:
        - report
      responses:
        '200':
          description: Query completed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report_Result'


  /articles:
    get:
      summary: Sends all articles that satisfy the query parameter filters used. By default (when no query parameters are used) all articles are returned.
      tags:
        - article
      operationId: get-all-articles
      parameters:
        - in: query
          name: start_date
          schema:
            type: string
          required: false
          description:  ISO date that is the start of the date range to search in. (e.g. "2020-12-01"). Optional.
        - in: query
          name: end_date
          schema:
            type: string
          required: false
          description:  ISO date that is the end of the date range to search in. (e.g. "2021-03-01"). Optional.
        - in: query
          name: key_terms
          schema:
            type: string
          required: false
          description:  Comma-delimited list of key terms to search for in the headline and main_text. (e.g. "hedgehog"). Optional.
      responses:
        '200':
          description: Successfully sent list of all reports according to query parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article_Results'
        '400':
          description: Invalid query parameters used or badly formatted request.

  '/article/{articleID}':
    get:
      tags:
        - article
      summary: Find article by url
      description: Returns article
      operationId: getArticleByUrl
      parameters:
        - name: articleID
          in: path
          description: ID of the article to return
          required: true
          schema:
            type: string
          example: "d0a9d34776afdd95e207e3a60026c5be"
      responses:
        '200':
          description: Successfully executed query
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article_Result'

  
  /log:
    get:
      tags:
        - log
      summary: Gives the API's log files.
      description: Returns all the API's logs
      operationId: getLogs
      responses:
        '200':
          description: Successfully return log files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'

components:
  schemas:
    Log:
      title: Log
      type: object
      properties:
        logs:
          type: array
          items:
            type: string
            example: "2021-03-19T03:59:40.577Z | ::1 requested '/outbreak' - Status Code: 200"
            
    Disease:
      type: object
      properties:
        disease_id:
          type: string
          description: The disease ID.
          example: "922866848e1358b4bdc607e4598d9cc5"
        name:
          type: string
          description: The disease name.
          example: "Ebola"
        symptoms:
          type: array
          items:
            type: string
            description: A symptom.
            example: "Fever"
    
    Disease_Result:
      type: object
      properties:
        disease_id:
          type: string
          description: The disease ID.
          example: "922866848e1358b4bdc607e4598d9cc5"
        name:
          type: string
          description: The disease name.
          example: "Ebola"
        symptoms:
          type: array
          items:
            type: string
            description: A symptom.
            example: "Fever"
        reports:
          type: array
          items:
            $ref: '#/components/schemas/Report'
    
    
  
    Report:
      title: Report
      type: object
      description: 'A reort.'
      x-examples:
        Covid-19:
          report_id: 1
          disease_id: 1
          disease_name: covid-19
          location:
            $ref: '#/components/schemas/Location'
          reported_cases: 17
          hospitilisation: 2
          deaths: 0
          start_date: '1997-10-31'
          end_date: '2019-08-24'
          investigationStatus: true
      properties:
        report_id:
          type: integer
          example: 1
          description: Unique identifier for the report.
        disease_name:
          type: string
          example: covid-19
        location:
          type: string
          example: "USA"
        reported_cases:
          type: integer
          example: 17
        hospitilisation:
          type: integer
          example: 2
        deaths:
          type: integer
          example: 0
        start_date:
          type: string
          format: date
          example: '1997-10-31'
        end_date:
          type: string
          format: date
          example: '1997-10-31'
    
    Report_Result:
      type: object
      properties:
        report_id:
          type: string
          example: "1ed7bef50165f63747e64fc1814fb517"
        article:
          $ref: '#/components/schemas/Article'
        desease:
          $ref: '#/components/schemas/Disease'
        event_date:
          type: string
          pattern: '^\d{4}-\d{2}-\d{2}T\d{2}:\d{2}\.\d{3}Z$'
          example: "2000-10-08T00:00:00.000Z"
        location:
          $ref: '#/components/schemas/Location'
          
          
    Article:
      type: object
      properties:
        article_id:
          type: string
          example: "e84f2907d78f8be2cd29bb25013aa702"
        url:
          type: string
          example: "https://www.cdc.gov/hepatitis/outbreaks/2019/hav-berries/index.htm"
        headline:
          type: string
          example: "Outbreak of Hepatitis A Virus Infections Potentially Linked to Fresh Blackberries"
        main_text:
          type: string
          example: "CDC, public health and regulatory officials in several states, and the U.S. Food and Drug Administration (FDA)external icon investigated a multistate outbreak of hepatitis A associated with exposure to contaminated fresh blackberries sold at Fresh Thyme Farmers Market and Woodman’s grocery stores during September 2019. As of February 19, 2020, a total of 20 outbreak-associated cases of hepatitis A were reported from 7 states. A list of the states and the number of cases in each is found on the Map of Reported Cases page. Illnesses started on dates ranging from October 8, 2019, to November 15, 2019. Ill people ranged in age from 14 to 73 years, with a median age of 50. Sixty percent of ill people were female. Of 19 people with available information, 11 (58%) were hospitalized. No deaths were reported."
        date_of_publication:
          type: string
          example: "2020-02-19"

    Location:
      type: string
      example: "USA"
    Locations:
      type: array
      items:
        $ref: '#/components/schemas/Location'
    Report_Results:
      type: array
      items:
        $ref: '#/components/schemas/Report_Result'
    Reports:
      type: array
      items:
        $ref: '#/components/schemas/Report'
    Article_Results:
      type: array
      items:
        $ref: '#/components/schemas/Article_Result'
    Articles:
      type: array
      items:
        $ref: '#/components/schemas/Article'
    Diseases_Results:
      type: array
      items:
        $ref: '#/components/schemas/Disease_Result'
    Diseases:
      type: array
      items:
        $ref: '#/components/schemas/Disease'
        
        
    Article_Result:
      type: object
      properties:
        article_id:
          type: string
          example: "e84f2907d78f8be2cd29bb25013aa702"
        url:
          type: string
          example: "https://www.cdc.gov/hepatitis/outbreaks/2019/hav-berries/index.htm"
        headline:
          type: string
          example: "Outbreak of Hepatitis A Virus Infections Potentially Linked to Fresh Blackberries"
        main_text:
          type: string
          example: "CDC, public health and regulatory officials in several states, and the U.S. Food and Drug Administration (FDA)external icon investigated a multistate outbreak of hepatitis A associated with exposure to contaminated fresh blackberries sold at Fresh Thyme Farmers Market and Woodman’s grocery stores during September 2019. As of February 19, 2020, a total of 20 outbreak-associated cases of hepatitis A were reported from 7 states. A list of the states and the number of cases in each is found on the Map of Reported Cases page. Illnesses started on dates ranging from October 8, 2019, to November 15, 2019. Ill people ranged in age from 14 to 73 years, with a median age of 50. Sixty percent of ill people were female. Of 19 people with available information, 11 (58%) were hospitalized. No deaths were reported."
        date_of_publication:
          type: string
          example: "2020-02-19"
        reports:
          $ref: '#/components/schemas/Reports'